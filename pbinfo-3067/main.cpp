#include <iostream>///Flavius Boian
#include<fstream>
using namespace std;
ifstream f("optime.in");
ofstream g("optime.out");
int v[]= {0,2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087};
int prim(int n)
{
    int i, ok=1;
    for(i=1; v[i]*v[i]<=n; i++)
        if(n%v[i]==0)
        {
            ok=0;
            break;
        }
    return ok;
}
int i,j,k,n,d,s,ap[201],x,maxim,suma,incepe,C;
int main()
{
    f>>C;
    if(C==1)
    {
        f>>k;
        d=11;
        for(i=1; i<=2*k; i++)
            for(j=1; j<=k; j++)
            {
                while(prim(d)==0 or (d/10)%10==0)
                    d=d+2;
                if(prim(d%100)==0)
                    s=s+d%100;
                d=d+2;
            }
        g<<s<<endl;
    }
    if(C==2)
    {
        f>>k>>x;
        d=11;
        for(i=1; i<=2*k; i++)
            for(j=1; j<=k; j++)
            {
                while(prim(d)==0 or (d/10)%10==0)
                    d=d+2;
                if(prim(d%100)==1)
                    ap[j]++;
                d=d+2;
            }
        for(i=1; i<=x; i++)
            suma=suma+ap[i];
        incepe=1;
        maxim=suma;
        for(i=x+1; i<=k; i++)
        {
            suma=suma+ap[i]-ap[i-x];
            if(suma>=maxim)
            {
                maxim=suma;
                incepe=i-x+1;
            }
        }
        g<<incepe<<endl<<maxim;
    }
    return 0;
}